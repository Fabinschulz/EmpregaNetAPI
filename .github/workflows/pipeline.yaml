name: CI/CD - EmpregaNet (ECR/App Runner)

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  TESTS_PROJECT_PATH: src/EmpregaNet.Tests/EmpregaNet.Tests.csproj
  SOLUTION_FILE: EmpregaNet.sln
  REGION: us-west-2
  ECR_REPOSITORY_NAME: empreganet-api
  DOCKERFILE_PATH: Dockerfile
  APPRUNNER_SERVICE_ARN: arn:aws:apprunner:us-west-2:000000000000:service/empreganet-dev # Substitua pelo ARN real do seu serviço App Runner

jobs:
  ci:
    name: Build e Testes (CI)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_FILE }}

      - name: Build Solution
        run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

      - name: Run Tests
        run: dotnet test ${{ env.TESTS_PROJECT_PATH }} --configuration Release --verbosity normal

  ecr:
    name: Build e Push da Imagem para ECR
    needs: [ci]
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag e Push Docker Image
        run: |
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG=${{ github.sha }}
          IMAGE_URI=$ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:$IMAGE_TAG

          echo "Building image $IMAGE_URI"
          docker build -t $IMAGE_URI -f ${{ env.DOCKERFILE_PATH }} .

          docker tag $IMAGE_URI $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:latest
          docker push $IMAGE_URI
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:latest

      - name: Deploy e Atualização do Serviço App Runner (CD)
        run: |
          echo "Forcing App Runner deployment for service: ${{ env.APPRUNNER_SERVICE_ARN }}"
          aws apprunner start-deployment --service-arn ${{ env.APPRUNNER_SERVICE_ARN }}
